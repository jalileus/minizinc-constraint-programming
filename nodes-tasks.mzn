int : nodes = 100; 
int : tasks = 50;
array [1..137] of 1..30 : arr_tasks = [1,1,1,1,2,2,3,3,3,3,3,3,4,4,4,4,4,4,5,6,6,6,6,6,6,7,7,8,8,8,8,8,9,9,9,10,10,11,11,12,13,13,15,16,17,18,19,14,7,26,21,8,15,16,20,19,27,16,6,17,28,5,16,6,18,24,15,11,10,28,14,22,21,8,27,16,13,12,18,19,20,16,21,10,20,28,30,24,22,15,23,20,13,29,10,27,30,28,11,13,20,24,29,12,18,21,23,29,30,23,26,27,18,28,19,20,23,23,30,17,25,15,27,29,30,28,18,19,17,27,20,22,22,25,28,30,24];

array [1..137] of 1..20 : arr_nodes = [6,20,13,18,6,11,14,12,15,11,13,8,6,20,13,12,10,8,13,8,9,10,12,18,17,10,12,11,15,19,20,10,18,13,10,20,11,17,19,15,15,20,17,17,18,20,20,1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,11,12,12,12,12,12,13,13,13,14,14,14,14,14,14,14,15,15,15,15,16,17,17,18,19,19,19,20,20];

array[1..tasks, 1..nodes] of var 0..1: assigned;

constraint forall(i in 1..tasks)(
    sum(j in 1..nodes)(assigned[i, j]) >= 1
);


constraint forall(j in 1..nodes)(
    sum(i in 1..tasks)(assigned[i, j]) <= 7
);



constraint forall(k in 1..tasks)(
    assigned[arr_tasks[k], arr_nodes[k]] == 1
);

var int: num_nodes_used = sum(j in 1..nodes)(max(i in 1..tasks)(assigned[i, j]));

solve minimize num_nodes_used;

output["the minimum number of node = ", show(num_nodes_used),"\n"];
